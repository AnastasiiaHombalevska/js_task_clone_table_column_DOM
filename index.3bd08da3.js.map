{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAKQ,EACA,EAIA,EACA,EACA,EAEA,EAmBA,EAjCF,EAAgB,AAFR,EAAG,SAAS,gBAAgB,CAAC,aAEhB,GAAG,CAAC,SAAC,CAAhC,EAAwC,OAAA,EAAI,KAAK,CAAC,EAAE,CAAC,WAAW,A,GAE1D,EAAc,EAAG,SAAS,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAIpE,EAAW,CADX,EAAW,SAAS,aAAa,CAAC,UACd,SAAS,CAAC,CAAA,GAEpC,EAAS,MAAM,GAET,EAAoB,EAAS,aAAa,CAAC,YAC3C,EAAoB,EAAG,EAAS,gBAAgB,CAAC,aACjD,EAAoB,EAAS,aAAa,CAAC,YAIjD,CAFM,EAAgB,SAAS,aAAa,CAAC,OAE/B,WAAW,CA6BX,EA3Bd,EAAkB,YAAY,CAC5B,EACA,EAAkB,gBAAgB,EAGpC,AAsB0B,EAtBjB,OAAO,CAAC,SAAC,CAAA,CAAM,CAAxB,EACE,IAAM,EAAc,SAAS,aAAa,CAAC,KAE3C,CAAA,EAAY,WAAW,CAAG,EAE1B,IAAM,EAAW,CAAgB,CAAC,EAAM,CAAC,gBAAgB,CAEzD,CAAgB,CAAC,EAAM,CAAC,YAAY,CAAC,EAAa,EACpD,GAIA,CAFM,EAAgB,SAAS,aAAa,CAAC,OAE/B,WAAW,CAUX,EARd,EAAkB,YAAY,CAC5B,EACA,EAAkB,gBAAgB,EAGpC,SAAS,IAAI,CAAC,WAAW,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar rows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\nvar selectedCells = rows.map(function(row) {\n    return row.cells[1].textContent;\n});\nvar columnName = _to_consumable_array(document.querySelectorAll(\"thead th\"))[1].textContent;\nfunction insertNewColumn(headerData, bodyData) {\n    var oldTable = document.querySelector(\"table\");\n    var newTable = oldTable.cloneNode(true);\n    oldTable.remove();\n    var newTableHeaderRow = newTable.querySelector(\"thead tr\");\n    var newTableBodyRows = _to_consumable_array(newTable.querySelectorAll(\"tbody tr\"));\n    var newTableFooterRow = newTable.querySelector(\"tfoot tr\");\n    var newHeaderCell = document.createElement(\"th\");\n    newHeaderCell.textContent = headerData;\n    newTableHeaderRow.insertBefore(newHeaderCell, newTableHeaderRow.lastElementChild);\n    bodyData.forEach(function(data, index) {\n        var newBodyCell = document.createElement(\"td\");\n        newBodyCell.textContent = data;\n        var lastCell = newTableBodyRows[index].lastElementChild;\n        newTableBodyRows[index].insertBefore(newBodyCell, lastCell);\n    });\n    var newFooterCell = document.createElement(\"th\");\n    newFooterCell.textContent = headerData;\n    newTableFooterRow.insertBefore(newFooterCell, newTableFooterRow.lastElementChild);\n    document.body.appendChild(newTable);\n}\ninsertNewColumn(columnName, selectedCells);\n\n//# sourceMappingURL=index.3bd08da3.js.map\n","'use strict';\n\nconst rows = [...document.querySelectorAll('tbody tr')];\n\nconst selectedCells = rows.map((row) => row.cells[1].textContent);\n\nconst columnName = [...document.querySelectorAll('thead th')][1].textContent;\n\nfunction insertNewColumn(headerData, bodyData) {\n  const oldTable = document.querySelector('table');\n  const newTable = oldTable.cloneNode(true);\n\n  oldTable.remove();\n\n  const newTableHeaderRow = newTable.querySelector('thead tr');\n  const newTableBodyRows = [...newTable.querySelectorAll('tbody tr')];\n  const newTableFooterRow = newTable.querySelector('tfoot tr');\n\n  const newHeaderCell = document.createElement('th');\n\n  newHeaderCell.textContent = headerData;\n\n  newTableHeaderRow.insertBefore(\n    newHeaderCell,\n    newTableHeaderRow.lastElementChild,\n  );\n\n  bodyData.forEach((data, index) => {\n    const newBodyCell = document.createElement('td');\n\n    newBodyCell.textContent = data;\n\n    const lastCell = newTableBodyRows[index].lastElementChild;\n\n    newTableBodyRows[index].insertBefore(newBodyCell, lastCell);\n  });\n\n  const newFooterCell = document.createElement('th');\n\n  newFooterCell.textContent = headerData;\n\n  newTableFooterRow.insertBefore(\n    newFooterCell,\n    newTableFooterRow.lastElementChild,\n  );\n\n  document.body.appendChild(newTable);\n}\n\ninsertNewColumn(columnName, selectedCells);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","oldTable","newTable","newTableHeaderRow","newTableBodyRows","newTableFooterRow","newHeaderCell","newFooterCell","selectedCells","rows","document","querySelectorAll","map","row","cells","textContent","columnName","querySelector","cloneNode","remove","createElement","insertBefore","lastElementChild","bodyData","forEach","data","index","newBodyCell","lastCell","body","appendChild"],"version":3,"file":"index.3bd08da3.js.map"}